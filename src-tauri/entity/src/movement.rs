//! SeaORM Entity. Generated by sea-orm-codegen 0.3.2
use chrono::{DateTime, Utc};
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "movements")]
pub struct Model {
    #[sea_orm(primary_key)]
    #[serde(skip_deserializing)]
    pub id: i32,
    pub name: String,
    pub r#type: i32,
    pub description: Option<String>,
    pub created_at: DateTime<Utc>,
    pub updated_at: DateTime<Utc>,
    pub deleted_at: Option<DateTime<Utc>>,
}

#[derive(Debug, Clone, Deserialize)]
pub struct AddDto {
    pub name: String,
    pub description: Option<String>,
    pub r#type: i32,
}

#[derive(Debug, Clone, Deserialize)]
pub struct UpdateDto {
    pub id: i32,
    pub name: String,
    pub description: Option<String>,
    pub r#type: i32,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct CommonDto {
    pub id: i32,
    pub name: String,
}

#[derive(Debug, Deserialize)]
pub struct Filter {
    pub name: Option<String>,
    pub deleted: Option<bool>, // if true => deleted_at IS NULL
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

pub enum MovementTypes {
    In = 1,
    Out = 2,
}

impl ActiveModelBehavior for ActiveModel {}
